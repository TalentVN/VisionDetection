// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VDS.WPS.Data;

namespace WPS.Data.Migrations
{
    [DbContext(typeof(WPSContext))]
    partial class WPSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VDS.WPS.Data.Entities.WorkPlace", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AuthorEmail")
                        .IsRequired();

                    b.Property<string>("AuthorId")
                        .IsRequired();

                    b.Property<string>("AuthorName")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("WorkPlaces");
                });

            modelBuilder.Entity("VDS.WPS.Data.Entities.WorkPlaceSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsActive");

                    b.Property<Guid>("WorkPlaceId");

                    b.Property<int>("WorkPlaceLevel");

                    b.Property<int>("WorkPlaceSize");

                    b.HasKey("Id");

                    b.HasIndex("WorkPlaceId")
                        .IsUnique();

                    b.ToTable("WorkPlaceSettings");
                });

            modelBuilder.Entity("VDS.WPS.Data.Entities.WorkPlaceSetting", b =>
                {
                    b.HasOne("VDS.WPS.Data.Entities.WorkPlace", "WorkPlace")
                        .WithOne("WorkPlaceSetting")
                        .HasForeignKey("VDS.WPS.Data.Entities.WorkPlaceSetting", "WorkPlaceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
